#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jardines.modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bdprueba")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAcudiente(Acudiente instance);
    partial void UpdateAcudiente(Acudiente instance);
    partial void DeleteAcudiente(Acudiente instance);
    partial void InsertNino(Nino instance);
    partial void UpdateNino(Nino instance);
    partial void DeleteNino(Nino instance);
    partial void InsertJardin(Jardin instance);
    partial void UpdateJardin(Jardin instance);
    partial void DeleteJardin(Jardin instance);
    #endregion
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Acudiente> Acudiente
		{
			get
			{
				return this.GetTable<Acudiente>();
			}
		}
		
		public System.Data.Linq.Table<Nino> Nino
		{
			get
			{
				return this.GetTable<Nino>();
			}
		}
		
		public System.Data.Linq.Table<Jardin> Jardin
		{
			get
			{
				return this.GetTable<Jardin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acudiente")]
	public partial class Acudiente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAcudiente;
		
		private long _cedula;
		
		private string _nombre;
		
		private string _telefono;
		
		private string _celular;
		
		private string _direccion;
		
		private string _correo;
		
		private EntitySet<Nino> _Nino;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAcudienteChanging(int value);
    partial void OnidAcudienteChanged();
    partial void OncedulaChanging(long value);
    partial void OncedulaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    #endregion
		
		public Acudiente()
		{
			this._Nino = new EntitySet<Nino>(new Action<Nino>(this.attach_Nino), new Action<Nino>(this.detach_Nino));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAcudiente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAcudiente
		{
			get
			{
				return this._idAcudiente;
			}
			set
			{
				if ((this._idAcudiente != value))
				{
					this.OnidAcudienteChanging(value);
					this.SendPropertyChanging();
					this._idAcudiente = value;
					this.SendPropertyChanged("idAcudiente");
					this.OnidAcudienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="BigInt NOT NULL")]
		public long cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acudiente_Nino", Storage="_Nino", ThisKey="idAcudiente", OtherKey="idAcudiente")]
		public EntitySet<Nino> Nino
		{
			get
			{
				return this._Nino;
			}
			set
			{
				this._Nino.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nino(Nino entity)
		{
			this.SendPropertyChanging();
			entity.Acudiente = this;
		}
		
		private void detach_Nino(Nino entity)
		{
			this.SendPropertyChanging();
			entity.Acudiente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nino")]
	public partial class Nino : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNino;
		
		private long _NIUP;
		
		private string _nombre;
		
		private System.DateTime _fechaNacimiento;
		
		private string _tipoSangre;
		
		private string _ciudadNacimiento;
		
		private string _telefono;
		
		private string _direccion;
		
		private string _eps;
		
		private int _idAcudiente;
		
		private int _idJardin;
		
		private EntityRef<Acudiente> _Acudiente;
		
		private EntityRef<Jardin> _Jardin;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNinoChanging(int value);
    partial void OnidNinoChanged();
    partial void OnNIUPChanging(long value);
    partial void OnNIUPChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnfechaNacimientoChanging(System.DateTime value);
    partial void OnfechaNacimientoChanged();
    partial void OntipoSangreChanging(string value);
    partial void OntipoSangreChanged();
    partial void OnciudadNacimientoChanging(string value);
    partial void OnciudadNacimientoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnepsChanging(string value);
    partial void OnepsChanged();
    partial void OnidAcudienteChanging(int value);
    partial void OnidAcudienteChanged();
    partial void OnidJardinChanging(int value);
    partial void OnidJardinChanged();
    #endregion
		
		public Nino()
		{
			this._Acudiente = default(EntityRef<Acudiente>);
			this._Jardin = default(EntityRef<Jardin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNino", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNino
		{
			get
			{
				return this._idNino;
			}
			set
			{
				if ((this._idNino != value))
				{
					this.OnidNinoChanging(value);
					this.SendPropertyChanging();
					this._idNino = value;
					this.SendPropertyChanged("idNino");
					this.OnidNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIUP", DbType="BigInt NOT NULL")]
		public long NIUP
		{
			get
			{
				return this._NIUP;
			}
			set
			{
				if ((this._NIUP != value))
				{
					this.OnNIUPChanging(value);
					this.SendPropertyChanging();
					this._NIUP = value;
					this.SendPropertyChanged("NIUP");
					this.OnNIUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime fechaNacimiento
		{
			get
			{
				return this._fechaNacimiento;
			}
			set
			{
				if ((this._fechaNacimiento != value))
				{
					this.OnfechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._fechaNacimiento = value;
					this.SendPropertyChanged("fechaNacimiento");
					this.OnfechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipoSangre", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string tipoSangre
		{
			get
			{
				return this._tipoSangre;
			}
			set
			{
				if ((this._tipoSangre != value))
				{
					this.OntipoSangreChanging(value);
					this.SendPropertyChanging();
					this._tipoSangre = value;
					this.SendPropertyChanged("tipoSangre");
					this.OntipoSangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudadNacimiento", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ciudadNacimiento
		{
			get
			{
				return this._ciudadNacimiento;
			}
			set
			{
				if ((this._ciudadNacimiento != value))
				{
					this.OnciudadNacimientoChanging(value);
					this.SendPropertyChanging();
					this._ciudadNacimiento = value;
					this.SendPropertyChanged("ciudadNacimiento");
					this.OnciudadNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eps", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string eps
		{
			get
			{
				return this._eps;
			}
			set
			{
				if ((this._eps != value))
				{
					this.OnepsChanging(value);
					this.SendPropertyChanging();
					this._eps = value;
					this.SendPropertyChanged("eps");
					this.OnepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAcudiente", DbType="Int NOT NULL")]
		public int idAcudiente
		{
			get
			{
				return this._idAcudiente;
			}
			set
			{
				if ((this._idAcudiente != value))
				{
					if (this._Acudiente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAcudienteChanging(value);
					this.SendPropertyChanging();
					this._idAcudiente = value;
					this.SendPropertyChanged("idAcudiente");
					this.OnidAcudienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJardin", DbType="Int NOT NULL")]
		public int idJardin
		{
			get
			{
				return this._idJardin;
			}
			set
			{
				if ((this._idJardin != value))
				{
					if (this._Jardin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidJardinChanging(value);
					this.SendPropertyChanging();
					this._idJardin = value;
					this.SendPropertyChanged("idJardin");
					this.OnidJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acudiente_Nino", Storage="_Acudiente", ThisKey="idAcudiente", OtherKey="idAcudiente", IsForeignKey=true)]
		public Acudiente Acudiente
		{
			get
			{
				return this._Acudiente.Entity;
			}
			set
			{
				Acudiente previousValue = this._Acudiente.Entity;
				if (((previousValue != value) 
							|| (this._Acudiente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acudiente.Entity = null;
						previousValue.Nino.Remove(this);
					}
					this._Acudiente.Entity = value;
					if ((value != null))
					{
						value.Nino.Add(this);
						this._idAcudiente = value.idAcudiente;
					}
					else
					{
						this._idAcudiente = default(int);
					}
					this.SendPropertyChanged("Acudiente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardin_Nino", Storage="_Jardin", ThisKey="idJardin", OtherKey="idJardin", IsForeignKey=true)]
		public Jardin Jardin
		{
			get
			{
				return this._Jardin.Entity;
			}
			set
			{
				Jardin previousValue = this._Jardin.Entity;
				if (((previousValue != value) 
							|| (this._Jardin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jardin.Entity = null;
						previousValue.Nino.Remove(this);
					}
					this._Jardin.Entity = value;
					if ((value != null))
					{
						value.Nino.Add(this);
						this._idJardin = value.idJardin;
					}
					else
					{
						this._idJardin = default(int);
					}
					this.SendPropertyChanged("Jardin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jardin")]
	public partial class Jardin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idJardin;
		
		private string _nombre;
		
		private string _direccion;
		
		private string _estado;
		
		private EntitySet<Nino> _Nino;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidJardinChanging(int value);
    partial void OnidJardinChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public Jardin()
		{
			this._Nino = new EntitySet<Nino>(new Action<Nino>(this.attach_Nino), new Action<Nino>(this.detach_Nino));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJardin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idJardin
		{
			get
			{
				return this._idJardin;
			}
			set
			{
				if ((this._idJardin != value))
				{
					this.OnidJardinChanging(value);
					this.SendPropertyChanging();
					this._idJardin = value;
					this.SendPropertyChanged("idJardin");
					this.OnidJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jardin_Nino", Storage="_Nino", ThisKey="idJardin", OtherKey="idJardin")]
		public EntitySet<Nino> Nino
		{
			get
			{
				return this._Nino;
			}
			set
			{
				this._Nino.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nino(Nino entity)
		{
			this.SendPropertyChanging();
			entity.Jardin = this;
		}
		
		private void detach_Nino(Nino entity)
		{
			this.SendPropertyChanging();
			entity.Jardin = null;
		}
	}
}
#pragma warning restore 1591
